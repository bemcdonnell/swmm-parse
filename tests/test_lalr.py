#
#  test_lalr.py
#
#  Created: Apr 25, 2024
#  Updated:
#
#  Author:  Michael E. Tryby
#           US EPA - ORD/CESER
#

import os
from io import StringIO

from lark import Lark
import pytest


DATA_PATH = os.path.join(os.path.abspath(os.path.dirname(__file__)), 'data')
EXAMPLE_PROJECT = os.path.join(DATA_PATH, 'example-project.inp')


def test_lalr(mocker):

    expected = """Tree(Token('RULE', 'start'), [Tree(Token('RULE', 'section'), [Token('__ANON_0', 'TITLE'), Tree('record', [Tree(Token('RULE', 'word'), [Token('__ANON_19', 'Example')]), Tree(Token('RULE', 'word'), [Token('__ANON_19', 'SWMM')]), Tree(Token('RULE', 'word'), [Token('__ANON_19', 'Project')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_1', 'OPTIONS'), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'FLOW_UNITS')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'CFS')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'INFILTRATION')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'GREEN_AMPT')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'FLOW_ROUTING')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'KINWAVE')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'START_DATE')]), Tree(Token('RULE', 'date'), [Token('__ANON_21', '8/6/2002')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'START_TIME')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '10:00')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'END_TIME')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '18:00')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'WET_STEP')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '00:15:00')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'DRY_STEP')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '01:00:00')])]), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'ROUTING_STEP')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '00:05:00')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_4', 'RAINGAGES'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'GAGE1')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'INTENSITY')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '0:15')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'TIMESERIES')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'SERIES1')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_5', 'EVAPORATION'), Tree('record', [Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'CONSTANT')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.02')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_6', 'SUBCATCHMENTS'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA1')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'GAGE1')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE1')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '2')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '80.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '800.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA2')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'GAGE1')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE2')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '2')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '75.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '50.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_7', 'SUBAREAS'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA1')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.2')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.02')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.02')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.1')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '20.0')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'OUTLET')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA2')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.2')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.02')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.02')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.1')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '20.0')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'OUTLET')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_8', 'INFILTRATION'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA1')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '4.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.34')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA2')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '4.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.34')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_9', 'JUNCTIONS'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE1')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '10.0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE2')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '10.0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE3')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '5.0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE4')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '5.0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE6')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE7')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '2.0')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_10', 'DIVIDERS'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE5')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '3.0')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C6')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'CUTOFF')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_11', 'CONDUITS'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C1')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE1')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE3')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '800')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.01')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C2')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE2')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE4')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '800')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.01')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C3')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE3')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE5')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '400')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.01')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C4')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE4')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE5')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '400')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.01')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C5')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE5')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE6')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '600')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.01')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C6')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE5')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'NODE7')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '400')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.01')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_12', 'XSECTIONS'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C1')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'RECT_OPEN')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.5')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '1')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C2')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'RECT_OPEN')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.5')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '1')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C3')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'CIRCULAR')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C4')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'RECT_OPEN')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C5')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'PARABOLIC')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.5')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '2.0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'C6')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'PARABOLIC')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.5')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '2.0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_13', 'POLLUTANTS'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'TSS')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'MG/L')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'Lead')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'UG/L')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'NO')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'TSS')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.20')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_14', 'LANDUSES'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'RESIDENTIAL')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'UNDEVELOPED')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_16', 'WASHOFF'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'RESIDENTIAL')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'TSS')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'EMC')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '23.4')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'UNDEVELOPED')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'TSS')]), Tree(Token('RULE', 'keyword'), [Token('__ANON_18', 'EMC')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '12.1')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '0')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_15', 'COVERAGES'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA1')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'RESIDENTIAL')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '80')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'UNDEVELOPED')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '20')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'AREA2')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'RESIDENTIAL')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '55')]), Tree(Token('RULE', 'name'), [Token('__ANON_20', 'UNDEVELOPED')]), Tree(Token('RULE', 'integer'), [Token('__ANON_24', '45')])])]), Tree(Token('RULE', 'section'), [Token('__ANON_17', 'TIMESERIES'), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'SERIES1')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '0:00')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.1')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '0:15')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '1.0')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '0:30')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.5')])]), Tree('record', [Tree(Token('RULE', 'name'), [Token('__ANON_20', 'SERIES1')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '0:45')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.1')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '1:00')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.0')]), Tree(Token('RULE', 'time'), [Token('__ANON_22', '2:00')]), Tree(Token('RULE', 'float'), [Token('__ANON_23', '0.0')])])])])\n"""

    # Convert input file to parse tree
    parser = Lark.open_from_package(
        "swmm.parse", "input-lalr.lark", ("grammars",), parser="lalr"
    )

    # Create a StringIO object to capture printed output
    captured_output = StringIO()
    # Patch sys.stdout to replace it with the StringIO object
    mocker.patch('sys.stdout', new=captured_output)

    with open(EXAMPLE_PROJECT) as f:
        file_tree = parser.parse(f.read())
    print(file_tree)

    output = captured_output.getvalue()

    assert expected == output
